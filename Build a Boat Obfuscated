





-- why r u here?
return (function(T, ...) local thescriptwasobfuscatedbymstudio45 = 'this script was obfuscated by mstudio45 wowo so coool scriptttt thx for using babft scrip by mstudio45 like it' local TEXT = string.reverse('u'..'sp/'..'gg'..'.drocsid & /ved.usp.www//:sp'..'tth | A.0.4 rotacsufbO USP gnisu detacsufbo saw elif sihT'); local V0 = T[((#{854;288;0x00F;(function(...)return 787,402,0x330;end)()} + 412662310))];  local V955437575 = T[((#{0x071;473;} + 0x2144CBA1))];  local V519483951 = T[((#{0x0B5;(function(...)return 0x215,322,703,0x38F;end)()} + 0x329BCCEA))];  local V459316715 = T[((299163722 - #("i am not wally stop asking me for wally hub support please fuck off")))];  local V2 = T.igtWjMj;  local V164692091 = T[((191718407 - #("Are you using AztupBrew, clvbrew, or IB2? Congratulations! You're deobfuscated!")))];  local V219 = T[(909943407)];  local V32 = T[(0x1CBBEB66)];  local V615862992 = T[(200400980)];  local V248 = T[((247064729 - #("why does psu.dev attract so many ddosing retards wtf")))];  local V883686752 = T[(371859136)];  local V92 = T[(743470820)];  local V884410245 = T[(0x2696B452)];  local V5 = T['w9NI1a7um'];  local V90 = T[(472300042)];  local V165 = T["wj0AD"];  local V100252355 = T[((#{0x040;318;310;0x2AD;} + 991670263))];  local V968570953 = T.n3VrVFJ;  local V1 = T[(0xC195EB4)];  local V163084390 = T[((79392178 - #("you dumped constants by printing the deserializer??? ladies and gentlemen stand clear we have a genius in the building.")))];  local V677389644 = T[((#{0x06E;0x061;0x101;} + 0x3DA73CB))];  local V488855525 = T['mGSFdpqgtu'];  local V598622399 = T[((979547151 - #("you dumped constants by printing the deserializer??? ladies and gentlemen stand clear we have a genius in the building.")))];  local V49 = T["Id2Nwd"];  local V3 = T[((#{0x1A7;} + 390336921))];  local V405210791 = T[(627840788)];  local V36 = T[((#{(function(...)return 0x2BA,946;end)()} + 0x4BC7D02))];  local V207989630 = T.keRo00bB4l;    local GetFEnv = ((getfenv) or (function(...) return (_ENV); end)); local Storage, _, Environment = ({}), (""), (GetFEnv(V1));  local bit32 = ((Environment["\98"..T["prwpvl"].."\116\51"..T[V163084390]]) or (Environment["\98"..T["prwpvl"].."\116"]) or ({})); local BitXOR = (((bit32) and (bit32["\98"..T[V677389644]..T.JxQ4fGuz6I.."\114"])) or (function(A, B) local P, C = V1, V0; while ((A > V0) and (B > V0)) do local X, Y = A % V2, B % V2; if X ~= Y then C = C + P; end; A, B, P = (A - X) / V2, (B - Y) / V2, P * V2; end; if A < B then A = B; end; while A > V0 do local X = A % V2; if X > V0 then C = C + P; end; A, P =(A - X) / V2, P * V2; end; return (C); end));  local MOD = (V2 ^ V32); local MODM = (MOD - V1); local BitSHL, BitSHR, BitAND;    local SubString = (_["\115\117\98"]); local GSub = (_[""..T['cv2d3Xi3cr'].."\115\117"..T["MXPb42"]]); local Character = (_[""..T[V207989630].."\104"..T["Sn5RLx"]..T[V955437575]]); local Byte = (_["\98\121\116"..T[V883686752]]);   do local function _(...) if ((#(not 0xfAEcB))._ == ((not {[(((#(not "i3jZ_=S1U#}<d;MPl<@J<T"))._)())] = (-#(not ...));[((-#"vgCs,V,|-|"))] = (#(not "RB/j-Q$MSTS+"))();}))() - (44315)._ >= (((not (function(_, _, _, _, _, _, _, _, ...)return (true)._, (((-#[====[A%BNnhBab;Oz_D8nh)8g]====]))._)(), (#(not [=[A>Y_c~-jB6URA!(pFb]=]))(), ((-(not "titU)TOw")))(), ((not "V_0huqeaWV"))(); end)))._)() or (-(not nil)) and #0x1043d - ((-#(not '@O:<B`3kj_#sZfMoE*w*5yF&G')))._ / ((-#nil))._ - (#(not [=========[?C~/;]=========]))._ ^ (((not ...))._)() + (0xdE68C)._ == ((-(not 0xab2e2)))._) then local function _(...) while ((#nil)() or (((-#{[((true)())] = (-(not ...));}))._)() - (((-...))._)() - #(not "3z9w6KC5>") % (((-(not _)))._)() - ((-#(not ...)))() and (-(not ...)) ^ #(not ...)) do  end;if (((-#(function(_, _, _, _, ...)return ; end)))() < ((not nil))._ >= ((not ...))._ / ((-(not [[_)?+$*zg#1),sNeY!]])))._ and #[========[vRva<jf`,RUwe}T]========] <= (true)() or ((-#...))() ^ ((-#nil))._) then  end;local _ = #...;if (((#(not _))._)() < (#(not true))._ or (#"wy/.=%(o0&u")() % "/Vmi,#6A&H,Qo`S%" + ((-(not [===[_e2Lz]===])))() * (nil)._ / (#nil)._ % #_) then  end;local function _(...)  end;local function _(...)  end;local function _(...)  end; end;local _ = (45036)._;local _ = (((-[=========[v9i$G)h&<;tsQDul5giL`]=========]))._)();for _ = (#(not _))() * (((-#(function(_, _, _, _, _, ...)return (-#(not 48335)), (-true), (-[====[gcZra>C;Wkh]====]), ((-#...))(), (-#(not "ihcEOL;2eY;ru{9T$=")); end)))._)() * 'e,}@>y1yQqAXMTs5!{(.ZIZR' < #(not "1SYnb,<9;Um") <= ((not nil))() % (#"A4?W6.&6V(Ni(PnOx.8")._ - #(not false) + (((-#(not _)))._)() * (((-(not ...)))._)() > (#(not _))._, (#(not {[(#(not _))] = ((not ...))();}))._ and ((-[==[4ksN&4D*tfZ4Z]==]))._ and ((not 0xb7DAB))() % (((-(not _)))._)() * #(not false) / ((not '-;1V=z'))._ + (-(not nil)) and ((not false))() ^ ((_)._)() * (-(not ...)), ((-#false <= (-#[===[q]===]) == ((-(not 0x199B8)))() + #41377 > ((-0x7d72B))._ / ((-(not nil)))()))() - ((-nil))._ == ((#[===[PsT+Ib]===])._)() - ((-(not 0xD4BcB)))() ^ (#(not nil))() or ((-#(not [==[s_;iWmacFQD~]==])))._ and (0x5C7fe)() >= (((-#(not ...)))._)() / #"6@9/F9@RvbnhE:J;Z" > ((-(not 0x8eB1f)))._ do local function _(...)  end;local function _(...)  end;while (((not ((-false))() >= #... % (not 0x888Fd) < ((#0xf9b64)._)()))() % (((-(not false)))._)() - (-(not 0xbbDB6)) and ((not 'tQnn0Dj=^(5sol'))() > (-(not nil)) <= (-(not true)) > (((-(not nil)))._)() > ((-#nil))._) do  end;local _ = (#_)._;local function _(...)  end;local function _(...)  end; end;local function _(...) for _ = (((-#(not ...)))._)() < ((-{((false)._)();[((#[========[e_=ugj;-/F1S-]========])._)] = ((#nil)._)();[(#82045)] = (-#nil);}))() ^ (-#(not 49049)) < (-#(not nil)) ^ (((-#'%-Ai#^|?%z4}R8'))._)() * ((not _))() * ((-#_))() ^ ((-#true))(), (#(not _))._ < ((-0x5f8CB))() < (((-#(not 0xd335A)))._)() >= (...)() or ((-true))._ > ((-true))() == (((-#11105))._)() + (#[======[7Bvv^um]======])._, ((#...)._)() or (((-...))._)() / ((#(not "(itw"))._)() >= ((-#[===[Z67h+>w4uoZg#r@N|,]===]))() % ((-_))() * #19121 + (nil)._ * '>?k#W' do  end;for _ = (((-#{((-#(not nil)))();}))._)() or [[^d3y]] or ((-(not 'qmg$,|q`=')))() % ((-#(not 'qOvkZ9&MTGYD')))._ == (-#(not ...)) ^ (#(not false))._ ^ (((-(not 13330)))._)() and (-_), ((-#(not (function(_, _, _, _, _, _, _, _, ...)return (#...)._, (-57716), (#0x2Ca5f)(), (((-#0xbA3Ed))._)(), (#(not true))._, ((-(not [========[Q#dyTFF8sC&mi%}Q_O.K]========])))._, (0xE8e5f)._, (#(not nil))(); end))))() + (#(not '!KEq>6|SdFSfHDd@d*#'))._ * (((not ...))._)() > (((-#[====[4j=-,hrvP8y1t;f-aN^0:)]====]))._)() / ((#(not "Fq.rMC5e}{1n"))._)() + (-#(not _)) + (-#0xB3E55) % (-77343), (((-_))._)() * ((#...)._)() / #28210 < (((-#[====[@f9SD$E8XDn]====]))._)() ^ (not 'oPou') + (-(not ...)) or ((not ...))._ * (...)() do  end;for _ = ((-(not #... < ((-#52629))() + (#(not 'fJz<hL`isXiS/(gF_'))._ ^ (-'uR|q$h-ah2ulmjy?'))))._ == (#(not {(not 43374);(((-#(not ...)))._)();}))._ + (((-#(not "AenVZhr")))._)() ^ ((-#(not false)))() >= false * (((-(not [===[,G,$rnv6X]===])))._)() < ((-(not true)))._ or ('dhTiy/3k&V$f&>;)')(), ((0xBB42a)._)() < (not [====[14n]====]) ^ (#(not "4xO?"))() and (((-_))._)() * ((#68105)._)() / ((not _))() < (-68160) % (#(not 75780))(), ((-[====[$@4nd,Br]====]))() and ((#0x41DaC)._)() / ([=====[ad]=====])() + ((-...))() - (((-0x76a6F))._)() <= (not _) + (((-#...))._)() == (((-#(not _)))._)() do  end;local function _(...)  end;local function _(...)  end;if (((function(...)return (-87394), ((-#false))(), _, ((-#(not false)))._, (not 'Sarr'), (false)._, ((-"S5A-+<42l0S"))(), (#22217)._, ((-#')8jK1fa.r%0s^R9'))._; end))._ - "rX_TP6" or (((-#'+=8,8'))._)() / ((-#false))._ - ((not [=[V3Z:Z`qQVR2ag1n,7n#.n:]=]))._ < _ + (-#_) + (-#"4o}TV)")) then  end; end;local function _(...) local _ = (-(not 73798));for _ = ((-#(not _)))() and ((#(not 0xEB2aD))._)() < ((-#nil))() >= ((not [======[J6/Tn4,e6anqM7]======]))._ + (#(not ...))._ >= ((-#...))._ or (#[=======[$pvS%.29COY,pm]=======])() <= (#(not 0xC170F))._, (#(not 0x77Dbd))._ >= #00876 < (not 0xDAF51) < #... or (((-#(not _)))._)() <= ((not [[c.DWR:TBpcKH/^Lzwh{]]))._ >= ((not nil))._ and (#(not _))._, ((not (((-#nil))._)() ^ ('/@~nxz>bj*')._ or ((#true)._)() ^ ((-[=========[Tz^f&]=========]))()))._ * ((-#{(...)();[((-...))] = ((not _))._;[(((#(not _))._)())] = ([==[9J(QtYfJn)Pq&>]==])();}))._ * ((-#false))._ * ((...)._)() * ((-#(not false)))() >= ((-#(not _)))() * (not true) - #'c2AHa|W#?xIo>9xWEXS).' do  end;local _ = ((#(not (function(_, _, _, _, _, ...)return (...)._, ([===[apU$;_HLK]===])(), ((-#(not ...)))(), (#(not _))(), (-#(not '*c8Z')), ((not "C~hyMC"))._, ((-#(not ...)))(), ((-[=[b^9_-*IR{Vl2N]=]))(), ((-#(not 25363)))._; end)))._)();local _ = (#0xAC87A)._;local _ = ((not (function(_, _, _, _, ...)return (#(not ...))._; end)))._;if (((#'q!`-v23;@}Q,TG_')._)() / ((-{((-#...))();}))() * (true)() - ((-#0xcEA63))() > (...)() or (((-_))._)() and ((_)._)() * ((not nil))._) then  end;local function _(...)  end; end;for _ = (not "*i}j$WK<Xfdbwc*4m:ic?UeT~") + (-#(not true)) + ((not {((-(not true)))();[((#nil)._)] = ((-(not true)))._;}))() ^ (((-#(not nil)))._)() < (-#_) ^ (((not 'Xn&7T-te>'))._)() or ((-#91059))._ * ((not [========[w{N!uvg7$b~N]========]))() >= ((80756)._)() > (_)._, (#nil)() / (#(not {[(((-'@q{Mv'))())] = (#0xEFf47)._;((-'~XN^AhQ8b'))._;[((((-#(not [=======[3rP]=======])))._)())] = (#0xfE9cd)();((#(not ">/"))._)();#(not ':?^sw5%U7hXmK3>mD$(k');}))() == ((-#"qw1x4}V"))._ + (-#((not nil))() - ((#(not nil))._)() <= #false and (-#(not [======[9yf:/yPE?e%ab]======]))) <= ((-#(not "*3?Ya&@rI")))() > ((not [=======[j<KtGe{2cnaormwa(=g7Tm]=======]))._ or (-"5p~==Mhg/#Af#1RnwU{>fw1G") ^ ((-#97174))() > (((-(not "o1MN2tpkn.{LRpUO=)")))._)() == ((-...))(), #false % (((not {[(((-true))._)] = ((-(not 0x7ab42)))();}))._)() or ((-_))() == (#_)._ or (-(not 12629)) == (#(not "Yr0Z`??J,"))._ / (((-#(not 0x4C45A)))._)() == (#(not false))() + ((-(not ';ve%5cu<?<3')))() - ((#(not _))._)() do for _ = ((-(not {[((not true))] = ((-#71081))();[(#(not true))] = ((-(not _)))();[((-#nil))] = #(not 61483);[((((-(not 'dLm')))._)())] = (-#"#QH_93z");})))() ^ ((not ...))._ + #(not 0x45C5e) >= ((-43737))() * ((#(not _))._)() >= ((-(not _)))() > ((-#nil))._ > #(not _), ((-#(not {(#(not ...))();[((#(not [===[Ubjv%@q*i]===]))())] = ((-#(not _)))();(#(not true))._;((-#65778))();(((-72915))._)();[(#_)] = ((-...))();})))._ < ((-(not true)))._ and ((-(not nil)))() % (#(not nil))() >= ((-#(not true)))._ and ((-(not "xwo@?)D)z6")))._ ^ ... - ((not true))(), (#(not ">O5Y{54DpC,"))() + (#{})._ + (#"r{?SSrJ|)e3yI|`5$!Om&")() + ((-(not true)))._ <= ((#20505)._)() <= (not 38847) and ((-"y#OoPWwJ2#a+C^-q_WCEY"))._ >= (not '-~^hBX}bs@Ft') do  end;local _ = ((-#"omm7vgb"))._;for _ = (((not ...))._)() == ((#(not (function(_, ...)return (-#(not _)); end)))._)() >= (-"4rXV^B!~O6$") >= ((-#"7TcX-,ucz"))._ and (-...) >= ((-(not 34563)))() >= ((-0xfD09c))._ > (#(not 0x5CfA0))._, ((-#(not '43d')))._ > (-#(((-#98651))._)() % ((-false))._ >= ((-#0xE40e4))() == ((-#(not 15248)))()) or (#(not [=====[:v0;=.v%OpxzD]=====]))() * ((-#0x5749a))() ^ (#0x6F8fe)() > (#49348)._ % (#0xEEBb5)() / (((-#(not "sHi|sOd")))._)(), (81513)() - (-(not 0xEC4AE)) < (((-#false))._)() <= (#(not ...))() * ('yJCMQ|/<J3tE')() > ((-#(not [===[so&|p%^!5zu]===])))() < (((-false))._)() ^ #(not '&q:o(%4lHq.18MeSj!') do  end;if (((#{})._)() <= (#(not (function(_, _, _, _, _, _, _, _, ...)return (_)._, (nil)._, (not "e=cmH2sV-8@#qI"), (((not '5&G~@qvkVU'))._)(), ((-#(not ...)))(), ((-#(not _)))._, (((-#90915))._)(), ((#(not _))._)(); end)))._ % (((-(not '#OuQ/+r_')))._)() >= #49392 * #[=====[zb{_5^N<T<~c1@:*+!]=====] + (-0x7DaC3) or ((-#_))._ - (((-#(not "P*43.b`nR")))._)()) then  end;local function _(...)  end;if ((#'&i.d.6&@P2e&MXEHpw|')._ == (-#(not ...)) == (#true)() or ((#(not nil))._)() and ((-21090))._ - ((-93279))._ - (((-#(not ...)))._)() and (((not _))._)()) then  end; end;local function _(...) local _ = #(not ...);local _ = (not '`+T/$zS');while (((not "kl%V|7("))._ > (((not 62545))._)() > (((-#31009))._)() % (-#false) % ((-#true))() ^ ((not nil))._ or #(not ...) / #(not _)) do  end;if (false >= (#50401)._ >= false * ((-"@ImZ;rbh=`5BE5C"))._ >= ((-(not _)))() ^ (#false)() % ((-(not true)))._ ^ ((nil)._)()) then  end;while ((_)() * #(not {((-#(not _)))._;}) and (#(not nil))() or (not [=========[Nv]=========]) and (#0x34c1c)() + (-(not [=[G_C_,2A=QYF2?0.w-:_2%@]=])) <= (((-(not false)))._)() + (((-nil))._)()) do  end;if ((-(not 93641)) or ((not "L*4Xnn)"))._ < ((-0xBcA5A))() * ((-#(not 'R./rSf1Fn&WZ(9&6hA')))._ >= #... * ((#(not ...))._)() < (-false) < ((not ...))._) then  end; end;local function _(...) while ((#"_Ix")() or (-#{}) == ((-'#K%n`2,!:<8ohMi.Ifnl1X_L'))() == ([======[qSOIDO|u1]======])._ >= ((...)._)() > ((-#[======[-5c,!OaKL]======]))._ * ((-false))._ and (#(not [====[g]====]))._) do  end;if (((#(not ...))._)() * ((not ((-#51997))._ == (-...) >= ((#"t^5^W,>ym<{c&1Rf1G")._)() * (-#true)))() == ((#51512)._)() % (-...) * ((not ";eq"))() < ((#_)._)() <= (#(not 0x88a3e))._ == ((-(not 29778)))._) then  end;local function _(...)  end;while ((((-#(((not 'CRlQ#'))._)() <= ((not '!LW:./4p'))() + (((-(not _)))._)() <= (((not ...))._)()))._)() ^ (#(not false))._ % (0xFBaD4)._ % ((-#(not 0x41e96)))._ and ((#[=====[{_.9b;r7%J!uGUX]=====])._)() <= (((-0x2ab5B))._)() < ((0xC6E6c)._)() > (((not 71130))._)()) do  end;local function _(...)  end;while ((-#(not {[((((-nil))._)())] = #(not 0xE3C8D);(_)();((not nil))();})) < (-#(not (function(_, _, _, _, _, _, ...)return ((#0xD4318)._)(), ((-#'Yo9p<QUaKR~>9S'))(), ((-(not ...)))(), ("Ru!}AS8WLu;m=tu>")._, (((-12492))._)(), (#68078)._; end))) + ((not nil))._ > ((-#(not false)))() ^ #(not ...) == #91141 and ((-#77454))() >= (#(not 60576))._) do  end; end; end;  end; end;   local Type = (Environment[""..T[V519483951]..T[V459316715]..T[V164692091]..T[V883686752]]); local LDExp = ((Environment["\109\97"..T[V519483951].."\104"]["\108"..T[V615862992].."\101"..T[V677389644]..T[V164692091]]) or (function(Value, Exponent, ...) return ((Value * V2) ^ Exponent); end)); local Pairs = (Environment["\112\97"..T["prwpvl"].."\114\115"]); local Select = (Environment["\115\101\108"..T[V883686752].."\99\116"]); local ToNumber = (Environment["\116"..T["JxQ4fGuz6I"].."\110\117\109\98"..T[V883686752]..T[V955437575]]); local UnPack = ((Environment["\117\110\112"..T['Sn5RLx']..T[V207989630]..T[V884410245]]) or (Environment["\116\97"..T['MXPb42'].."\108"..T[V883686752]][""..T["Dr4muqgBH"].."\110"..T[V164692091].."\97"..T[V207989630]..T[V884410245]])); local Floor = (Environment[""..T[V405210791].."\97\116\104"]["\102\108"..T['JxQ4fGuz6I']..T["JxQ4fGuz6I"]..T[V955437575]]); local SetMetaTable = (Environment["\115\101\116"..T[V405210791]..T[V883686752]..T[V519483951].."\97\116"..T['Sn5RLx']..T["MXPb42"]..T.HcZ0mUlG3..T[V883686752]]); local RawSet = (Environment["\114"..T.Sn5RLx.."\119\115"..T[V883686752]..T[V519483951]]);    BitSHR = ((bit32[""..T[V955437575]..T[V598622399].."\104\105\102"..T[V519483951]]) or (function(A, B, ...) if (B < V0) then return (BitSHL(A, -(B))); end; return (Floor(A % V2 ^ V32 / V2 ^ B)); end)); local BitNOT = (bit32[""..T["MXPb42"]..T[V100252355]..T['JxQ4fGuz6I']..T[V519483951]]) or (function(A, ...) return (MODM - A); end); BitAND = (bit32["\98"..T['Sn5RLx']..T[V100252355].."\100"]) or (function(A, B, ...) return (((A + B) - BitXOR(A, B)) / V2); end); local BitOR = (bit32["\98"..T['JxQ4fGuz6I'].."\114"]) or (function(A, B, ...) return (MODM - BitAND(MODM - A, MODM - B)); end); BitSHL = ((bit32["\108"..T[V598622399]..T[V488855525].."\105\102"..T[V519483951]]) or (function(A, B, ...) if (B < V0) then return (BitSHR(A, -(B))); end; return ((A * V2 ^ B) % V2 ^ V32); end));  if ((not (Environment["\98\105"..T[V519483951]..T[V968570953].."\50"])) and (not (Environment[""..T['MXPb42']..T["prwpvl"].."\116"]))) then  bit32["\98\120"..T['JxQ4fGuz6I'].."\114"] = BitXOR; bit32["\98"..T['JxQ4fGuz6I']..T[V955437575]] = BitOR; bit32["\114"..T[V598622399]..T[V488855525].."\105\102"..T[V519483951]] = BitSHR; bit32[""..T["MXPb42"]..T[V100252355]..T.JxQ4fGuz6I..T[V519483951]] = BitNOT; bit32["\108"..T[V598622399]..T[V488855525].."\105"..T["b1Cu2c6ok"].."\116"] = BitSHL; bit32["\98\97"..T[V100252355].."\100"] = BitAND;  end;   do local function _(...) local _ = (#_)() - ((-#(function(_, _, _, _, _, ...)return (#_)(), #(not _), (((-#(not _)))._)(), (#(not _))._; end)))._ + ((#(not {(_)();((not _))();[(((not _))())] = ((_)._)();#_;}))._)() > (((-_))._)() or ((-#_))._ < ({(((-(not _)))._)();[(((-_))._)] = (#_)._;})._ >= ((-(not _)))() / ((-(not _)))() == (#(not _))() * (((-(not _)))._)() or ((not _))._ ^ ((_)._)();  end; end;   local Create = (((Environment[""..T[V519483951]..T['Sn5RLx']..T["MXPb42"]..T.HcZ0mUlG3..T[V883686752]][""..T[V207989630]..T[V955437575]..T[V883686752]..T["Sn5RLx"]..T[V519483951].."\101"])) or ((function(Size, ...) return ({ UnPack({}, V0, Size); }); end))); local Concatenate = (Environment["\116\97"..T["MXPb42"].."\108"..T[V883686752]]["\99\111\110"..T[V207989630].."\97"..T[V519483951]]); local Insert = (Environment[""..T[V519483951].."\97\98\108\101"]["\105\110\115\101\114\116"]); local Remove = (Environment["\116"..T.Sn5RLx..T['MXPb42']..T["HcZ0mUlG3"].."\101"]["\114\101\109"..T['JxQ4fGuz6I'].."\118\101"]);  Environment[""..T['MXPb42'].."\105\116"..T[V968570953].."\50"] = bit32;  local PrimaryXORKey = (V219);   do local function _(...) for _ = ((#(not _))._)() > (((not _))._)() - ((#(function(_, _, _, _, _, ...)return ((-_))._, ((-#_))(), ((-#(not _)))._, ((-#(not _)))._, ((_)._)(), (_)._, ((-#(not _)))(); end))._)() / ((not _))._ / ((#(not _))._)() - (_)() ^ ((-#_))() * ((_)._)() + ((not _))._ > (((not _))._)() == ((-(not _)))._ * #(not _), _ / ((-_))() / ((#_)._)() <= (not _) >= (not (function(_, _, ...)return (((-(not _)))._)(), (((-(not _)))._)(), ((-#_))(), ((_)._)(), ((-_))._; end)) * #(not _) / ((#(not _))._)() >= ((not _))._ + (((-(not _)))._)() and (#_)._ * ((not _))() >= ((-#_))._, (((-#_))._)() < ((-#(not _)))() + ((-_))() or (((-_))._)() < #(not _) < ((-#{((-#(not _)))._;[(_)] = (-#_);(_)();}))._ >= #(not _) / #(not _) < (((-(not _)))._)() == (_)._ - ((-_))._ == (_)() do local _ = (-_);for _ = ((not _))._ - (((-(not _)))._)() ^ ((-#_))() - (#(not _))._ and ((-#_))._ > ((-#_))._ and ((#_)._)() + (_)() / ((-(not _)))() ^ ((-#(not _)))(), #(not _) == ((-(not _)))._ > (#(not {((_)._)();(#_)._;((-_))();}))._ or ((-#_))() ^ (not _) - (((-_))._)() > (((not _))._)() <= ((-#_))() * ((#(not _))._)() - ((#_)._)(), #(not _) == (-#(not _)) ^ ((#(not _))._)() and ((#_)._)() > (not _) ^ (not _) == ((-#(not _)))._ < #_ - ((-#(not _)))._ or (_)._ do while (((not _))._ or ((not _) * ((_)._)() % (_)() and (_)())._ ^ (-#_) or _ + (_)() or ((-#(not _)))() ^ (((not _))._)() + ((-_))._) do  end;for _ = ((-#_))() == ((-#(not _)))._ - ((-(not _)))._ <= (_)._ % (-(not _)) + (_)() < (#_)._ ^ ((not _))._, (((-(function(_, _, _, _, _, _, _, _, _, ...)return (#_)(); end)))._)() and ((-((-#(not _)))() == ((-#_))._ > (-_) * ((#(not _))._)()))() > ((#(not _))._)() < (#(not _))._ - (((-#_))._)() < ((-(not _)))() - _ / (((-_))._)(), (((-#_))._)() % (_)._ or (((-#_))._)() <= (_)() / (#_)() * ((_)._)() == ((not _))() < (((-_))._)() do  end;local function _(...)  end;if ((-#(not (-_) ^ ((#(not _))._)() > ((-(not _)))._ ^ (#(not _))())) and (((-#(not _)))._)() % ((#_)._)() or ((#_)._)() % ((_)._)() or ((-#_))._ - (-#_) == (#(not _))()) then  end;if ((((-_))._)() <= #_ > (-_) >= (#(not _))() ^ ((-#_))._ >= ((-(not _)))() % _ * ((-(not _)))._) then  end;while (((not _))._ < ((-(not _)))._ or ((not _))._ >= ((#_)._)() / ((-(not _)))._ * (#(not _))._ - (#(not _))._ % ((#_)._)()) do  end;local _ = ((-#(not {((#_)._)();(((-(not _)))._)();[((_)._)] = #_;})))._; end;for _ = ((#(not (not _) * (((-#(not _)))._)() >= ((-_))._ / ((not _))._ > ((-#(not _)))() - ((not _))()))._)() < (#(not _))() >= ((-#_))._ == #(not _) <= (-_) <= (((not _))._)() or ((not _))() and (_)() < (((-#_))._)() >= ((#_)._)(), ((-#{(-#(not _));[((((not _))._)())] = ((-_))();}))._ + ((-#(not _)))() ^ ((#(not _))._)() ^ (#(not {[((#_)._)] = ((-#(not _)))._;((not _))._;[(((not _))())] = ((-_))._;((#(not _))._)();((not _))();}))._ ^ (((-#_))._)() * (((not _))._)() < ((-#_))() / (#(not _))() < ((-#(not _)))._ - ((-(not _)))._, #(not _) < ((not _))._ <= (-_) ^ (_)() < (-#(not _)) == ((not _))._ <= ((_)._)() - (((-_))._)() * (-#_) == (((not _))._)() do while (((not _))() + (-(not _)) + ((#(not _))._)() - (#(not _))._ <= (#(not _))() ^ ((-#(not _)))() <= ((#(not _))._)() >= _) do  end;while (((_)._)() and ((-((not _))._ / (((not _))._)() - (_)() - (not _)))() - (#(not _))._ <= (((-#(not _)))._)() > ((not _))._ / (not _) <= ((not _))._ + ((_)._)()) do  end;while (((function(_, _, _, _, _, ...)return (((not _))._)(), (#_)._, ((-#(not _)))._, #(not _), ((-#_))._, (#(not _))(), (#_)._, ((-_))(); end))() % ((-#_))() > ((-#_))._ % ((-(not _)))._ == (_)() >= ((-#_))._ or ((-#_))() * (#(not _))()) do  end;for _ = ((#(not _))._)() > ((-(function(_, _, _, _, _, _, _, _, ...)return #_, ((-_))(), (#(not _))(), #_, (#(not _))(), (#(not _))(), (#(not _))(), #(not _); end)))() == ((not _))._ < #(not _) >= (-(not _)) >= (not _) ^ ((-#(not _)))() ^ (-#(not _)), (((-#(not _)))._)() > (#(not _))() == ((-#(not _)))() - (#_)._ / ((-(not _)))._ ^ #(not _) % (((-(not _)))._)() % (#_)._, ((-#(not (function(_, ...)return ((not _))._; end))))() + (_)() + (#_)._ == ((not _))() - ((-(not _)))._ > ((-(not _)))._ <= ((-#_))._ ^ #(not _) do  end;local function _(...)  end;local _ = ((-_))(); end;local function _(...) while (((-(not _)))._ + (-_) > ((_)._)() >= ((not _))() >= ((-(not _)))._ < ((-#_))._ >= (_)._ ^ #(not _)) do  end;while ((((-(not _)))._)() or (-#(not _)) / ((-_))._ * (_)._ == ((-#_))() <= (-(not _)) ^ ((-_))._ * (_)._) do  end;for _ = ((-(not _)))._ or (_)._ / ((#(not _))._)() == (_)() / (_)() ^ ((not _))._ or ((-_))._ or (#_)(), (((-#(not {(((-_))._)();[((-(not _)))] = (#(not _))();[((-#_))] = (-#(not _));[(((-(not _)))())] = (-#_);[(((_)._)())] = ((#_)._)();[(((-_))())] = (((not _))._)();})))._)() <= (-#(not _)) <= ((-(not _)))() - ((-#_))() < (not _) < (((-#(not _)))._)() > (((not _))._)() > ((-(not _)))(), ((not _))() <= (not _) % ((-#_))._ or ((#(not _))._)() / (_)() and (((-_))._)() >= (-#_) - ((_)._)() do  end;for _ = ((not _))() <= #_ + #_ == (_)._ < #_ == ((not _))() < (-#(not _)) == (#(not _))._, (((-(not {[((#_)())] = ((-#_))();})))._)() >= ((-_))._ * (#_)._ or (_)() > (((-#(not _)))._)() / ((-#(not _)))() <= ((-#_))._ > ((#_)._)(), (_)._ ^ #_ > ((-(not _)))() and ((-#_))() % ((not _))._ / (#_)() + #_ * (((not _))._)() do  end;local _ = ((-(not _)))._; end;local function _(...) while (#(function(_, _, _, _, ...)return #(not _), (_)._, ((-#(not _)))(), ((-#_))(), (-_), #(not _), ((not _))._, (-#(not _)), (((-#_))._)(); end) == (((-#(not _)))._)() - ((-(not _)))._ < (-#(not _)) < (-(not _)) < ((#_)._)() and (#(not _))() / #_) do  end;while (((-#(not _)))._ + ((-_))._ >= (-_) ^ (#_)._ or ((#(not _))._)() + (-(not _)) >= (((-_))._)() < (#_)()) do  end;for _ = ((#_)._)() > #_ > (-_) == (_)() * (-#(not _)) > ((-#(not _)))._ and (not _) <= ((-#_))._, #(not _) + (_)._ == ((not _))._ ^ (((not _))._)() + ((-(not _)))() == (((-_))._)() / _ ^ ((-_))(), ((-_))._ or #(not (function(...)return (-_), ((-#_))._, (_)._, (-#(not _)), _, (((not _))._)(), (((-(not _)))._)(); end)) <= ((_)._)() * (#(not _))._ - ((#(not _))._)() % ((-(not _)))._ > ((#_)._)() < (-(not _)) do  end;local _ = (-(not _));for _ = ((not _))._ and ((-(not _)))() ^ (((-(not _)))._)() % (#(not _))._ / ((#(not _))._)() % #_ and #(not _) or (#(not _))(), (#(not _))._ - _ or (_)._ == ((_)._)() == ((not _))() - ((_)._)() == #_ / (#(not _))._, (#(not _))._ % (_)._ / (#_)._ - (#_)._ > (-(not _)) < ((-#_))._ <= (((-_))._)() + (((-_))._)() do  end;local _ = (-_);local function _(...)  end; end;local function _(...) local function _(...)  end;for _ = (((-#_))._)() / (((not _))._)() * (#(not _))() and (#_)() and (#_)() ^ (_)._ % (#(not _))() - _, ((-(not (((-#(not _)))._)() == (#_)._ - ((#(not _))._)() * ((-(not _)))._)))._ >= (#(not _))._ > (not _) % (((-(not _)))._)() == #_ ^ ((-#(not _)))._ or ((#(not _))._)() ^ #_, ((not _))() - #_ < ((-#_))._ <= (-(not _)) and (((not _))._)() - ((-(not _)))() and (((-_))._)() * (_)() do  end;if ((_)() / (-#_) > ((-_))._ or ((-(not _)))._ < ((#_)._)() < (not _) < (((-#_))._)() <= (((-#_))._)()) then  end;local _ = (_)();local _ = ((_)._)(); end;while (#(not _) and {[(((-#_))())] = (-#_);(-_);((-_))();} * ((_)._)() or ((-_))() == (-#(not _)) == ((not _))() < (((not _))._)() % ((-(not _)))._ * ((_)._)() * ((-(not _)))._) do for _ = ((-#_))() / (((not _))._)() / _ or ((not _))() <= (not _) - ((#(not _))._)() / (_)._ <= (#(not _))._, ((_)._ % #_ == ((not _))._ < ((_)._)())() ^ (not (_)() % ((not _))() - ((-#_))._ == ((not _))._) + (not _) - ((-_))._ < ((-(not _)))._ + (not _) or ((-#_))._ > #_, ((-#_))._ + ((not _))() > ((#(not _))._)() + (-(not _)) <= ((-_))() >= ((-_))._ + ((_)._)() * #(not _) do  end;local _ = ((#(not (function(_, _, _, _, ...)return (#_)._, ((-_))._; end)))._)();local _ = (#_)._;while (((-(not _)))() == (not _) == (#_)._ % (((-_))._)() <= (#_)() == ((-#_))._ % (((-_))._)() % ((#(not _))._)()) do  end;for _ = (not (function(_, ...)return (-(not _)), (_)(), ((-(not _)))(), ((-#_))(), ((-#_))(), (#(not _))(), ((-(not _)))._, (#_)(); end)) == #_ and (-_) <= #_ or ((-#_))() >= ((#(not _))._)() / ((-(not _)))._ % #(not _), ((_)._)() + ((function(_, _, _, _, _, _, _, _, ...)return (_)._, (_)(), ((not _))._, (((-#_))._)(), (#_)(), ((#_)._)(), ((#_)._)(), (_)(); end))._ >= ((-#(not _)))() <= (#(not _))() >= (-_) > (_)._ >= (-(not _)) * ((#(not _))._)(), ((-#(not (function(_, _, _, _, _, _, _, ...)return (#(not _))._, (((not _))._)(), (not _), (-#(not _)), (#(not _))._, ((-#_))._, (#(not _))._, ((-_))(), ((-#(not _)))._; end))))() >= (_)._ and (((-(not _)))._)() % (-(not _)) or ((-(not _)))() > ((#(not _))._)() + ((-(not _)))() - ((#(not _))._)() do  end;if ((#(not _ * (not _) or ((-(not _)))._ or ((-#_))()))._ == (((-#{#_;[(((#_)._)())] = ((#(not _))._)();}))._)() % (-_) > ((#(not _))._)() and #(not _) <= ((-#_))._ * (((-(not _)))._)() and ((-#(not _)))._) then  end; end;local _ = ((-#_))._; end;  end; end;   local F = (#TEXT + V165); local G, Dictionary = ({}), ({}); for H = V0, F - V1 do local Value = Character(H); G[H] = Value; Dictionary[H] = Value; Dictionary[Value] = H; end; local ByteString, Position = (function(ByteString) local X, Y, Z = Byte(ByteString, V1, V3); if ((X + Y + Z) ~= V248) then PrimaryXORKey = PrimaryXORKey + V49; F = F + V92; end; ByteString = SubString(ByteString, V5);  local C, D, E = (""), (""), ({}); local I = V1; local function K() local L = ToNumber(SubString(ByteString, I, I), V36); I = I + V1; local M = ToNumber(SubString(ByteString, I, I + L - V1), V36); I = I + L; return (M); end; C = Dictionary[K()]; E[V1] = C; while (I < #ByteString) do local N = K(); if G[N] then D = G[N]; else D = C .. SubString(C, V1, V1); end; G[F] = C .. SubString(D, V1, V1); E[#E + V1], C, F = D, D, F + V1; end; return (Concatenate(E)); end)("PSU|"), (#TEXT - V90);local function CalculateVM(Index, Value, ...)if (Index == 445550696) then return (BitXOR((((Value) - 476700) - 169502) - 251524, 256914));elseif (Index == 32271753) then return (BitXOR(((Value) - 82318) - 177186, 852163));elseif (Index == 215204980) then return (BitXOR(BitXOR((BitXOR(BitXOR(Value, 828139), 919)) - 42662, 562474), 700699));elseif (Index == 422284031) then return (BitXOR(BitXOR((((Value) - 753056) - 435392) - 428770, 403656), 255867));elseif (Index == 305880077) then return (BitXOR(((BitXOR(Value, 591794)) - 691677) - 364746, 562825));else end; end;local V16777216 = T[(328213364)];  local V1 = T[((202989329 - #("Luraph v12.6 has been released!: changed absolutely fucking nothing but donate to my patreon!")))];  local V4 = T[((391194312 - #("@everyone designs are done. luraph website coming.... eta JULY 2020")))];  local V0 = T[((412662383 - #("@everyone designs are done. luraph website coming.... eta JULY 2020")))];  local V256 = T[(0x38B0BAA5)];  local V370809395 = T[(69348077)];  local V2 = T['igtWjMj'];  local V3 = T[((#{0x292;} + 0x17441199))];  local V65536 = T[((449008344 - #("I'm not ignoring you, my DMs are full. Can't DM me? Shoot me a email: mem@mem.rip (Business enquiries only)")))];     do local function _(...) local function _(...) local _ = ((-(not _)))();for _ = _ and ((-#(not _)))() <= (((-_))._)() ^ (_)() or (#(not _))._ + (-#_) - ((-_))() ^ (((-_))._)() >= (((not _))._)() - (-(not _)), #_ * ((not ((-(not _)))._ <= (#_)() >= (-(not _)) + (-(not _)) > (((-_))._)() <= (_)()))() >= #((-#_))._ / (#_)() > ((-#(not _)))() <= ((#(not _))._)() / ((#_)._)() or ((-#_))() + (_)() and (((-_))._)() / ((-#_))() / ((-_))() + ((#(not _))._)(), ((-(not _)))._ <= ((-(not (_)() % ((not _))._ > ((-(not _)))._ + ((#(not _))._)() > ((-#_))() < (_)())))() * ((_)._ < ((#(not _))._)() - ((_)._)() <= ((-#(not _)))())() <= ((#{((not _))();[(((-_))._)] = (-_);(_)();})._)() - (#_)() - ((-#(not _)))() <= ((-#(not _)))._ < (((-#_))._)() or ((not _))() == ((-#_))() do if ((-(((-_))._)() + (#_)._ == (not _) + (#_)._) + #_ ^ (-_) or ((-#_))() >= (-#_) >= ((-#_))._ + ((-_))._ + ((_)._)()) then  end;local _ = ((-(not _)))();local _ = (((-(not _)))._)();local _ = (function(_, _, ...)return (((-#(not _)))._)(), ((-#_))._, (-_), #(not _), ((not _))(), (-_), ((-_))._, (-_), ((-_))(); end);while ((#(not _))._ % (#(not {[((((-(not _)))._)())] = (-_);}))() / ((#(not _))._)() or (#(not _))._ and (-#_) + (#(not _))() <= ((_)._)() % ((not _))()) do  end;for _ = ((-#(not _)))() or #(function(...)return ((-(not _)))(), #(not _), ((-#_))(), (-_), ((#(not _))._)(), (-#(not _)), ((-(not _)))._, (((not _))._)(), _; end) > ((not _))() % _ and ((-(not _)))._ + (#_)() or (_)() or (_)._, ((#(not _))._)() <= ((-(function(_, _, _, _, _, _, _, _, ...)return ((not _))._, (-#(not _)), ((-(not _)))._; end)))() + (#_)._ or (-_) <= ((_)._)() / ((not _))() and ((-(not _)))._ >= (((-#_))._)(), #(not (function(...)return #(not _), ((_)._)(), (-_), (-(not _)), ((_)._)(), ((-_))._; end)) % (((-#_))._)() - (#_)() % ((#(not _))._)() <= ((-#_))._ and ((-_))() < (_)() + ((-#(not _)))() do  end; end;local function _(...) if (((not _))() < (#_)() + ((-#_))() % (-#(not _)) < ((#(not _))._)() and #(not _) * ((not _))._ < ((-_))._) then  end;if ((-#(not _)) or (((-#_))._)() < (-#(not _)) + ((not _))._ or (-#(not _)) - ((-_))._ and (((not _))._)() >= _) then  end;local function _(...)  end;for _ = ((-#_))() > ((-#(not _)))() == ((_)._)() % ((-_))() ^ ((-_))() > (-#_) ^ (#(not _))._ >= (((not _))._)(), #_ >= (((not (function(...)return ((-(not _)))._, ((#_)._)(), ((not _))._; end)))._)() ^ ((-_))._ ^ ((#_)._)() <= ((-#(not _)))() ^ (#_)._ and (not _) + ((-#_))._, ((-#(not _)))() and ((-#(not (((-(not _)))._)() > (((-(not _)))._)() > (((-#_))._)() < (#(not _))())))._ - (-#_) - _ - (-(not _)) > ((-#_))._ < (((-_))._)() < (((not _))._)() do  end;while ((not (function(_, ...)return (#_)(), ((#_)._)(), (-#_), ((-_))._, (#_)._, (_)(); end)) or ((-#_))() or ((#_)._)() - (-#(not _)) <= ((-(not _)))() / ((-#_))() - (((not _))._)() - (((-_))._)()) do  end;if ((#(function(_, _, _, _, _, _, _, ...)return #(not _), ((-#_))._, ((-_))._, (((-(not _)))._)(), (((-(not _)))._)(); end))() - ((#(not _))._)() - (((-#_))._)() + (((-#(not _)))._)() < (-_) * ((-#(not _)))._ < ((not _))() <= #_) then  end;while (((-(not _)))._ / ((not _))() and ((-#(not _)))() or (((-#_))._)() > (-#(not _)) ^ ((-(not _)))() and (-(not _)) + ((_)._)()) do  end;local _ = ((-#_))._; end;while ((((-_))._)() + (((-(not {[(#(not _))] = ((#_)._)();(((-#_))._)();(((-_))._)();[((((-_))._)())] = (_)._;[((((-_))._)())] = ((-#_))._;[(#_)] = (-_);})))._)() - ((-(not _)))._ > ((-#(function(_, _, _, _, ...)return (not _), (-(not _)), #_, #_, ((-#_))(), (#(not _))._, (((-#_))._)(), (#_)(); end)))._ and ((#_)._)() % (((-#_))._)() == (_)() % _ >= ((-#_))() and (#_)._) do local function _(...)  end;for _ = ((#(not {}))._)() * ((#(not (function(...)return ((#(not _))._)(), ((not _))._, ((-#_))._, ((not _))(), (-_), ((#(not _))._)(), (#_)._, ((-(not _)))._; end)))._)() ^ ((-_))._ == (((-#_))._)() - (-#(not _)) or (((-(not _)))._)() < ((-#(not _)))() or ((-_))._, #(not _) + (-#_) or ((#_)._)() + (#(not _))._ > ((-#(not _)))() % (-(not _)) * (#_)() > ((not _))(), ((#(function(_, _, _, ...)return (-#_), (-(not _)); end))._)() ^ (-_) % _ and ((-#(not _)))() * (_)() <= ((-#_))._ / (#_)() - (((-_))._)() do  end;while ((#_)() < (-#(not _)) == (#(not _))() <= (#_)._ + (-(not _)) and ((_)._)() ^ ((-(not _)))() - ((-(not _)))()) do  end;for _ = ((not _))._ == (_)() % ((-#_))._ <= ((#_)._)() - ((-_))() < ((not _))._ <= (-(not _)) < #(not _), (#(not _))._ + ((not _))._ ^ ((-#(not _)))._ < ((#(not _))._)() % (((not _))._)() * ((-_))._ <= ((-(not _)))() - (-(not _)), ((-#(not _)))() + (-#(not _)) + ((not _))._ * ((-#(not _)))._ * (((-_))._)() * ((-#(not _)))._ and (#_)() * (_)._ do  end;while ((((-(not (function(_, _, _, ...)return (not _), ((-(not _)))._, ((#_)._)(), (((-#(not _)))._)(), (((-#(not _)))._)(), (_)._; end))))._)() % ((-#_))._ < (((not _))._)() >= (#_)() - ((-#(not _)))._ < ((-(not _)))() <= ((not _))() >= ((-(not _)))()) do  end;local _ = ((not _))._;local _ = (#(not _))._;local function _(...)  end; end;for _ = (#(not _))._ - ((-_))() or (-#_) <= ((-_))() == (-#(not _)) <= (((-_))._)() == (_)() == (((-#_))._)() < ((-_))() + (((-(not _)))._)(), (((-#(function(_, _, _, _, _, _, _, _, ...)return (-#(not _)), ((not _))(), ((#_)._)(); end)))._)() <= ((-(not {[((((not _))._)())] = ((not _))._;})))() - ((-#(not _)))._ == (#_)._ or ((-_))._ / (#(not _))() % ((-(not _)))._ <= ((not _))._ <= ((#(not _))._)() or (-#(not _)), ((-(not _)))() < (((-#_))._)() ^ ((#_)._)() < ((not {}))() ^ ((-(not _)))() and ((#(not _))._)() < (((-#_))._)() ^ _ - #_ or ((-#_))._ do for _ = _ - ((not (function(_, _, _, _, _, _, _, ...)return ((-(not _)))._, ((-(not _)))(), #(not _), ((#_)._)(), ((#(not _))._)(), (((-_))._)(), (#(not _))._; end)))._ ^ ((not _))() + ((-(not _)))._ or _ * ((-(not _)))._ % ((-_))() >= (((not _))._)(), (#(not _))() % (-(not _)) > ((-#(not _)))() * (_)() > ((-(not _)))._ and #_ % (((-#_))._)() + ((not _))(), (not _) - #_ - ((-#_))() and (-(not _)) == (((not _))._)() <= ((-#(not _)))() / ((not _))() >= (-(not _)) do  end;for _ = (not _) / (-_) < ((not _))._ > ((not _))._ > (#_)._ - ((-#(not _)))._ > (_)() <= (((-#_))._)(), (not _) + (-(not _)) - (-_) - (((-_))._)() % (not _) - (((-(not _)))._)() % (#(not _))() + ((not _))._, (#_)() % (((-(not _)))._)() < (((-#_))._)() or ((#_)._)() < ((_)._)() + ((-_))() * (-#(not _)) + (-#_) do  end;while ((#_)() / (#_)() <= _ > #(not _) <= ((-#(not _)))._ < (#(not _))._ * (#(not _))._ * (#(not _))._) do  end;local function _(...)  end;local _ = ((-_))();local function _(...)  end; end;local _ = ((-#_))._;while ((((-#_))._)() or ((-#(not _)))._ / ((-#_ ^ (#(not _))._ % (((not _))._)() > ((-#(not _)))()))() / (((-_))._)() % (_)._ > ((_)._)() % (((-#_))._)() and (not _) * (-(not _)) / #_) do local _ = ((-#(not _)))._;local _ = (-#(not (function(_, _, _, _, _, _, _, ...)return ((-_))._, #_, #(not _), ((-#(not _)))(), ((-_))(), #(not _), (#_)._; end)));local _ = ((not _))();if (((#_)._)() > (#(not (function(_, ...)return (((-_))._)(), ((-#_))(), ((not _))._, ((-#_))(), #(not _), (#(not _))._; end)))() < (not _) / (#_)._ ^ (((-#(not _)))._)() % #_ ^ ((-_))._ / ((not _))()) then  end;local function _(...)  end;local _ = (((-_))._)();local function _(...)  end; end;local _ = (-_); end;  end; end;   local function gBits32() local W, X, Y, Z = Byte(ByteString, Position, Position + V3); W = BitXOR(W, PrimaryXORKey); PrimaryXORKey = W % V256; X = BitXOR(X, PrimaryXORKey); PrimaryXORKey = X % V256; Y = BitXOR(Y, PrimaryXORKey); PrimaryXORKey = Y % V256; Z = BitXOR(Z, PrimaryXORKey); PrimaryXORKey = Z % V256; Position = Position + V4; return ((Z * V16777216) + (Y * V65536) + (X * V256) + W); end; local function gBits8() local F = BitXOR(Byte(ByteString, Position, Position), PrimaryXORKey); PrimaryXORKey = F % V256; Position = (Position + V1); return (F); end; local function gBits16() local W, X = Byte(ByteString, Position, Position + V2); W = BitXOR(W, PrimaryXORKey); PrimaryXORKey = W % V256; X = BitXOR(X, PrimaryXORKey); PrimaryXORKey = X % V256; Position = Position + V2; return ((X * V256) + W); end; local function gBit(Bit, Start, End) if (End) then local R = (Bit / V2 ^ (Start - V1)) % V2 ^ ((End - V1) - (Start - V1) + V1); return (R - (R % V1)); else local P = V2 ^ (Start - V1); return (((Bit % (P + P) >= P) and (V1)) or(V0)); end; end;  local Mode = ""..T[V370809395]; local function _R(...) return ({...}), Select(Mode, ...); end;local function Deserialize(...) local V2047 = T['IxSRCsgRHx'];  local V880354 = T["RkdQf0cxl"];  local V1 = T[((#{} + 0xC195EB4))];  local V32 = T[(0x1CBBEB66)];  local V24 = T[((148857134 - #("Are you using AztupBrew, clvbrew, or IB2? Congratulations! You're deobfuscated!")))];  local V21 = T.zJVwLS7Z;  local V8 = T[(307165447)];  local V6 = T["zTxsrYXjUO"];  local V51 = T[((#{160;0x2FA;0x072;(function(...)return 0x173;end)()} + 0xC1D156C))];  local V1023 = T[(0x3474E46A)];  local V20 = T[((854005415 - #("concat was here")))];  local V7 = T[(240506477)];  local V3 = T[(0x1744119A)];  local V31 = T[((497333962 - #("Luraph: Probably considered the worst out of the three, Luraph is another Lua Obfuscator. It isnt remotely as secure as Ironbrew or Synapse Xen, and it isn't as fast as Ironbrew either.")))];  local V256 = T[(951106213)];  local V36 = T[(0x4BC7D04)];  local V2 = T["igtWjMj"];  local V34770 = T[(0x25039BA)];  local V52 = T[(0x233404D)];  local V824205 = T[((219190877 - #("why the fuck would we sell a deobfuscator for a product we created.....")))];  local V86369 = T[(915959842)];  local V4 = T[(391194245)];  local V40 = T.hCg5c;  local V0 = T[((412662331 - #("concat was here")))];  local V5 = T['w9NI1a7um'];  local V5000 = T[(0xB14A37B)];        local function Deserialize(...)  	local Constants = ({}); 	local Functions = ({}); 	local Instructions = ({});  			 	local ParameterCount = gBits8(PrimaryXORKey);  	for Index = V0, gBits32(PrimaryXORKey) - V1, V1 do Functions[Index] = Deserialize(); end;  	local StackSize = gBits16(PrimaryXORKey);   							for Index = V0, gBits32(PrimaryXORKey) - V1, V1 do 								local Type = gBits8(PrimaryXORKey);  								if (Type == V24) then  									local Bool = gBits8(PrimaryXORKey); 									Constants[Index] = (Bool ~= V0);  								elseif (Type == V51) then 									while (true) do 										local Length = gBits32(PrimaryXORKey); 										Constants[Index] = SubString(ByteString, Position, Position + Length - V1); 										Position = Position + Length;  										break; 									end; elseif (Type == V40) then  									while (true) do 										local Left = gBits32(PrimaryXORKey); 										local Right = gBits32(PrimaryXORKey); 										local IsNormal = V1; 										local Mantissa = (gBit(Right, V1, V20) * (V2 ^ V32)) + Left; 										local Exponent = gBit(Right, V21, V31); 										local Sign = ((-V1) ^ gBit(Right, V32)); 										if (Exponent == V0) then 											if (Mantissa == V0) then 												Constants[Index] = (Sign * V0); 												break; 											else 												Exponent = V1; 												IsNormal = V0; 											end; 										elseif(Exponent == V2047) then 											Constants[Index] = (Mantissa == V0) and (Sign * (V1 / V0)) or (Sign * (V0 / V0)); 											break; 										end; 										Constants[Index] = LDExp(Sign, Exponent - V1023) * (IsNormal + (Mantissa / (V2 ^ V52))); 										break; 									end; elseif (Type == V36) then  									while (true) do 										local Length = gBits32(PrimaryXORKey); 										if (Length == V0) then Constants[Index] = (''); break; end;  										if (Length > V5000) then 											local Constant, ByteString = (''), (SubString(ByteString, Position, Position + Length - V1)); 											Position = Position + Length; 											for Index = V1, #ByteString, V1 do local Byte = BitXOR(Byte(SubString(ByteString, Index, Index)), PrimaryXORKey); PrimaryXORKey = Byte % V256; Constant = Constant .. Dictionary[Byte]; end; 											Constants[Index] = Constant; 										else 											local Constant, Bytes = (''), ({Byte(ByteString, Position, Position + Length - V1)}); 											Position = Position + Length; 											for Index, Byte in Pairs(Bytes) do local Byte = BitXOR(Byte, PrimaryXORKey); PrimaryXORKey = Byte % V256; Constant = Constant .. Dictionary[Byte]; end; 											Constants[Index] = Constant; 										end;  										break; 									end; 								else                                     Constants[Index] = nil 								end; 							end;  							local Count = gBits32(PrimaryXORKey); 							for Index = V0, Count - V1, V1 do Instructions[Index] = ({}); end;  							for Index = V0, Count - V1, V1 do 								local InstructionData = gBits8(PrimaryXORKey); 								if (InstructionData ~= V0) then 									InstructionData = InstructionData - V1; 									local C, E, B, A, D, Enum = V0, V0, V0, V0, V0, V0; 									local InstructionType = gBit(InstructionData, V1, V3);  							if (InstructionType == V6) then  elseif (InstructionType == V0) then  A = (gBits16(PrimaryXORKey)); B = (gBits16(PrimaryXORKey)); C = (gBits16(PrimaryXORKey)); Enum = (gBits8(PrimaryXORKey)); elseif (InstructionType == V3) then  A = (gBits16(PrimaryXORKey)); B = Instructions[(gBits32(PrimaryXORKey))]; C = (gBits16(PrimaryXORKey)); Enum = (gBits8(PrimaryXORKey)); elseif (InstructionType == V1) then  A = (gBits16(PrimaryXORKey)); B = (gBits32(PrimaryXORKey)); Enum = (gBits8(PrimaryXORKey)); elseif (InstructionType == V5) then  A = (gBits16(PrimaryXORKey)); B = (gBits32(PrimaryXORKey)); C = (gBits16(PrimaryXORKey)); Enum = (gBits8(PrimaryXORKey)); D = ({}); for Index = V1, C, V1 do D[Index] = ({[V0] = gBits8(PrimaryXORKey), [V1] = gBits16(PrimaryXORKey)}); end;  elseif (InstructionType == V2) then  A = (gBits16(PrimaryXORKey)); B = Instructions[(gBits32(PrimaryXORKey))]; Enum = (gBits8(PrimaryXORKey)); end;  							if (gBit(InstructionData, V6, V6) == V1) then C = Constants[C]; end; if (gBit(InstructionData, V5, V5) == V1) then B = Constants[B]; end; if (gBit(InstructionData, V8, V8) == V1) then E = Instructions[gBits32(PrimaryXORKey)]; else E = Instructions[Index + V1]; end; if (gBit(InstructionData, V4, V4) == V1) then A = Constants[A]; end;  							if (gBit(InstructionData, V7, V7) == V1) then D = ({}); for Index = V1, gBits8(), V1 do D[Index] = gBits32(); end; end;  							local Instruction = Instructions[Index];  							Instruction[V880354] = B; Instruction[V824205] = Enum; Instruction["Y0S1N"] = A; Instruction['Su9J1UO'] = D; Instruction['Mbag'] = C; Instruction['lMm'] = E; end; end;  	return ({ 	['Eiqz1pYaa'] = Constants; 	["f0JQdLGl"] = Functions; 	['cX2Hja'] = Instructions; 	[V34770] = StackSize; 	["ouzJfoQt"] = ParameterCount; 	[-V86369] = V0; 	});  end;    return (Deserialize(...)); end;    local function Wrap(Chunk, UpValues, Environment, ...)  		local Constants = Chunk['Eiqz1pYaa']; 	local Instructions = Chunk["cX2Hja"]; 	local Functions = Chunk['f0JQdLGl']; 	local ParameterCount = Chunk["ouzJfoQt"]; 	local InitialInstructionPoint = 0; 	local StackSize = Chunk[34770];  	return (function(...)  				local lUpValues = ({}); 		local InstructionPoint = Instructions[InitialInstructionPoint]; 		local OP_A = "Y0S1N"; 		local VarArg = {}; 		local PCount = (Select(Mode, ...) - 1); 		local OP_D = 'Su9J1UO'; 		local OP_E = 'lMm'; 		local DecryptConstants = (true); 		local Top = -(1); 		local Arguments = {...}; 		local OP_B = 880354; 		local VMKey = (898451796); 		local OP_C = 'Mbag'; 		local Stack = {}; 		local OP_ENUM = 824205;  		for Index = 0, PCount, 1 do 			if (Index >= ParameterCount) then 				VarArg[Index - ParameterCount] = Arguments[Index + 1]; 			else 				Stack[Index] = Arguments[Index + 1]; 			end; 		end;  		local VarArgs = PCount - ParameterCount + 1;  		while (true) do 			local Instruction = InstructionPoint; 			local Enum = Instruction[OP_ENUM]; 			InstructionPoint = Instruction[OP_E];if (Enum <= 59) then if (Enum <= 29) then if (Enum <= 14) then if (Enum <= 6) then if (Enum <= 2) then if (Enum <= 0) then Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum == 1) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](Stack[A + 1]); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](Stack[A + 1]); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 2) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 4) then if (Enum > 3) then Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 4) then  Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]](); Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum > 5) then Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](Stack[A + 1]); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = #Stack[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 6) then  Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 10) then if (Enum <= 8) then if (Enum > 7) then Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] - Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] + Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] + Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 8) then  Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]];end;elseif (Enum == 9) then Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 10) then Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; do return; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 12) then if (Enum == 11) then Stack[Instruction[OP_A]] = (Instruction[OP_B] ~= 0);elseif (Enum <= 12) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum > 13) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 14) then  local A = Instruction[OP_A]; do return UnPack(Stack, A, Top); end;end;elseif (Enum <= 21) then if (Enum <= 17) then if (Enum <= 15) then local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum > 16) then local A = Instruction[OP_A]; local Step = Stack[A + 2]; local Index = Stack[A] + Step; Stack[A] = Index; if (Step > 0) then if (Index <= Stack[A + 1]) then InstructionPoint = Instruction[OP_B]; Stack[A + 3] = Index; end; elseif (Index >= Stack[A+1]) then InstructionPoint = Instruction[OP_B]; Stack[A + 3] = Index; end;elseif (Enum < 17) then  Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]](); Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 19) then if (Enum == 18) then Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; do return; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 19) then local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = -(Stack[Instruction[OP_B]]); Instruction = Instruction[OP_E]; for Index = Instruction[OP_A], Instruction[OP_B] do Stack[Index] = (nil); end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum > 20) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]];elseif (Enum < 21) then  Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] - Instruction[OP_C]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 25) then if (Enum <= 23) then if (Enum > 22) then Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 23) then  local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum == 24) then Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 25) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Stack[Instruction[OP_C]]];end;elseif (Enum <= 27) then if (Enum == 26) then Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; do return Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])) end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; do return UnPack(Stack, A, Top); end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 27) then Stack[Instruction[OP_A]] = Create(Instruction[OP_B]); Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum == 28) then local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]];elseif (Enum <= 29) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 44) then if (Enum <= 36) then if (Enum <= 32) then if (Enum <= 30) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Stack[Instruction[OP_C]]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Stack[Instruction[OP_C]]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum > 31) then local A = Instruction[OP_A]; Stack[A] = Stack[A]();elseif (Enum < 32) then  Stack[Instruction[OP_A]] = -(Stack[Instruction[OP_B]]);end;elseif (Enum <= 34) then if (Enum > 33) then local A = Instruction[OP_A]; local Results = ({ Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])) }); local Limit = Instruction[OP_C]; local K = 0; for I = A, Limit, 1 do K = K + 1; Stack[I] = Results[K]; end; for I = Limit + 1, StackSize do Stack[I] = nil; end;elseif (Enum < 34) then  Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; do return; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum > 35) then local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end;elseif (Enum < 36) then  Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; do return; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 40) then if (Enum <= 38) then if (Enum == 37) then InstructionPoint = Instruction[OP_B];elseif (Enum <= 38) then local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Stack[Instruction[OP_C]]];end;elseif (Enum == 39) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] + Instruction[OP_C];elseif (Enum <= 40) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Create(256); Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](Stack[A + 1]); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 42) then if (Enum == 41) then Stack[Instruction[OP_A]] = Instruction[OP_B] * Stack[Instruction[OP_C]];elseif (Enum <= 42) then local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum == 43) then Stack[Instruction[OP_A]] = Instruction[OP_B];elseif (Enum <= 44) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 51) then if (Enum <= 47) then if (Enum <= 45) then if (Stack[Instruction[OP_A]]) then InstructionPoint = Instruction[OP_B]; end;elseif (Enum == 46) then local A = Instruction[OP_A]; local Results, Limit = _R(Stack[A](Stack[A + 1])); Top = Limit + A - 1; local K = 0; for I = A, Top do K = K + 1; Stack[I] = Results[K]; end;elseif (Enum <= 47) then local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 49) then if (Enum > 48) then Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] - Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] + Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; UpValues[Instruction[OP_B]] = Stack[Instruction[OP_A]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local B = Instruction[OP_B]; local Result = Stack[B]; for Index = B + 1, Instruction[OP_C] do Result = Result .. Stack[Index]; end; Stack[Instruction[OP_A]] = Result; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 49) then  Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum == 50) then Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 51) then Stack[Instruction[OP_A]] = Wrap(Functions[Instruction[OP_B]], (nil), Environment);end;elseif (Enum <= 55) then if (Enum <= 53) then if (Enum > 52) then Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C];elseif (Enum < 53) then  Stack[Instruction[OP_A]] = Create(256);end;elseif (Enum > 54) then Stack[Instruction[OP_A]]();elseif (Enum < 55) then  local A = Instruction[OP_A]; local B = Instruction[OP_B]; local Offset = 50 * (Instruction[OP_C] - 1); local T = Stack[A]; local Count = 0; for Index = A + 1, B do T[Offset + Count + 1] = Stack[A + (Index - A)]; Count = Count + 1; end;end;elseif (Enum <= 57) then if (Enum == 56) then local A = Instruction[OP_A]; local C = Instruction[OP_C]; local D = A + 2; local Result = ({ Stack[A](Stack[A + 1], Stack[D]); }); for Index = 1, C do Stack[D + Index] = Result[Index]; end; local R = Result[1]; if (R) then Stack[D] = R; InstructionPoint = Instruction[OP_B]; end;elseif (Enum <= 57) then local A = Instruction[OP_A]; Top = A + VarArgs - 1; for Index = 0, VarArgs do Stack[A + Index] = VarArg[Index]; end; for I = Top + 1, StackSize do Stack[I] = nil; end;end;elseif (Enum > 58) then local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 59) then  Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Create(256); Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 89) then if (Enum <= 74) then if (Enum <= 66) then if (Enum <= 62) then if (Enum <= 60) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum > 61) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = (Instruction[OP_B] ~= 0); Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 62) then  Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local Results, Limit = _R(Stack[A](Stack[A + 1])); Top = Limit + A - 1; local K = 0; for I = A, Top do K = K + 1; Stack[I] = Results[K]; end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local Results = { Stack[A](UnPack(Stack, A + 1, Top)); }; local Limit = Instruction[OP_C]; local K = 0; for I = A, Limit do K = K + 1; Stack[I] = Results[K]; end; for I = Limit + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 64) then if (Enum == 63) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]](); Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 64) then if (Stack[Instruction[OP_A]] ~= Stack[Instruction[OP_C]]) then InstructionPoint = Instruction[OP_B]; end;end;elseif (Enum > 65) then local A = Instruction[OP_A]; local Results, Limit = _R(Stack[A](UnPack(Stack, A + 1, Instruction[OP_B]))); Top = Limit + A - 1; local K = 0; for I = A, Top do K = K + 1; Stack[I] = Results[K]; end;elseif (Enum < 66) then  Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] - Instruction[OP_C];end;elseif (Enum <= 70) then if (Enum <= 68) then if (Enum == 67) then local A = Instruction[OP_A]; local Close = {}; for Index = 1, #lUpValues, 1 do local List = lUpValues[Index]; for Index = 0, #List, 1 do local UpValue = List[Index]; local oStack = UpValue[1]; local Position = UpValue[2]; if ((oStack == Stack) and (Position >= A)) then Close[Position] = oStack[Position]; UpValue[1] = Close; end; end; end;elseif (Enum <= 68) then if (Stack[Instruction[OP_A]] == Instruction[OP_C]) then InstructionPoint = Instruction[OP_B]; end;end;elseif (Enum == 69) then Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 70) then Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 72) then if (Enum > 71) then Stack[Instruction[OP_A]] = #Stack[Instruction[OP_B]];elseif (Enum < 72) then  if (not (Stack[Instruction[OP_A]])) then InstructionPoint = Instruction[OP_B]; end;end;elseif (Enum > 73) then Stack[Instruction[OP_A]][Stack[Instruction[OP_B]]] = Stack[Instruction[OP_C]];elseif (Enum < 74) then  if (Stack[Instruction[OP_A]] ~= Instruction[OP_C]) then InstructionPoint = Instruction[OP_B]; end;end;elseif (Enum <= 81) then if (Enum <= 77) then if (Enum <= 75) then local A = Instruction[OP_A]; Stack[A] = 0 + (Stack[A]); Stack[A + 1] = 0 + (Stack[A + 1]); Stack[A + 2] = 0 + (Stack[A + 2]); local Index = Stack[A]; local Step = Stack[A + 2]; if (Step > 0) then if (Index > Stack[A + 1]) then InstructionPoint = Instruction[OP_B]; else Stack[A + 3] = Index; end; elseif (Index < Stack[A + 1]) then InstructionPoint = Instruction[OP_B]; else Stack[A + 3] = Index; end;elseif (Enum > 76) then Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; do return; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 77) then  Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 79) then if (Enum == 78) then if (Stack[Instruction[OP_A]] == Stack[Instruction[OP_C]]) then InstructionPoint = Instruction[OP_B]; end;elseif (Enum <= 79) then Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum == 80) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; UpValues[Instruction[OP_B]] = Stack[Instruction[OP_A]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; UpValues[Instruction[OP_B]] = Stack[Instruction[OP_A]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 81) then Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 85) then if (Enum <= 83) then if (Enum == 82) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; do return; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 83) then local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end;end;elseif (Enum > 84) then local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 85) then  end;elseif (Enum <= 87) then if (Enum == 86) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 87) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Stack[Instruction[OP_C]]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Stack[Instruction[OP_C]]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Stack[Instruction[OP_C]]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum == 88) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]];elseif (Enum <= 89) then local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end;end;elseif (Enum <= 104) then if (Enum <= 96) then if (Enum <= 92) then if (Enum <= 90) then Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Create(256); Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](Stack[A + 1]); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum == 91) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 92) then Stack[Instruction[OP_A]] = (not (Stack[Instruction[OP_B]]));end;elseif (Enum <= 94) then if (Enum > 93) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 94) then  local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Top)); for I = A + 1, Top do Stack[I] = nil; end;end;elseif (Enum > 95) then local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Top)); for I = A + 1, Top do Stack[I] = nil; end;elseif (Enum < 96) then  UpValues[Instruction[OP_B]] = Stack[Instruction[OP_A]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 100) then if (Enum <= 98) then if (Enum == 97) then local A = Instruction[OP_A]; Stack[A] = Stack[A](Stack[A + 1]); for I = A + 1, StackSize do Stack[I] = nil; end;elseif (Enum <= 98) then do return; end;end;elseif (Enum == 99) then local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = (Instruction[OP_B] ~= 0); Instruction = Instruction[OP_E]; UpValues[Instruction[OP_B]] = Stack[Instruction[OP_A]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]](); Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local Close = {}; for Index = 1, #lUpValues, 1 do local List = lUpValues[Index]; for Index = 0, #List, 1 do local UpValue = List[Index]; local oStack = UpValue[1]; local Position = UpValue[2]; if ((oStack == Stack) and (Position >= A)) then Close[Position] = oStack[Position]; UpValue[1] = Close; end; end; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 100) then Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]];end;elseif (Enum <= 102) then if (Enum > 101) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] + Stack[Instruction[OP_C]];elseif (Enum < 102) then  Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum == 103) then local B = Instruction[OP_B]; local Result = Stack[B]; for Index = B + 1, Instruction[OP_C] do Result = Result .. Stack[Index]; end; Stack[Instruction[OP_A]] = Result;elseif (Enum <= 104) then UpValues[Instruction[OP_B]] = Stack[Instruction[OP_A]];end;elseif (Enum <= 112) then if (Enum <= 108) then if (Enum <= 106) then if (Enum > 105) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Stack[Instruction[OP_C]]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 106) then  local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum == 107) then Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]];elseif (Enum <= 108) then Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local Results, Limit = _R(Stack[A](UnPack(Stack, A + 1, Instruction[OP_B]))); Top = Limit + A - 1; local K = 0; for I = A, Top do K = K + 1; Stack[I] = Results[K]; end; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Top)); for I = A + 1, Top do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 110) then if (Enum > 109) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum < 110) then  Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum > 111) then local Function = Functions[Instruction[OP_B]]; local fUpValues = Instruction[OP_D]; local Indexes = {}; local nUpValues = SetMetaTable({}, { __index = function(_, Key) local UpValue = Indexes[Key]; return (UpValue[1][UpValue[2]]); end, __newindex = function(_, Key, Value) local UpValue = Indexes[Key]; UpValue[1][UpValue[2]] = Value; end; }); for Index = 1, Instruction[OP_C], 1 do local UpValue = fUpValues[Index]; if (UpValue[0] == 0) then Indexes[Index - 1] = ({ Stack, UpValue[1] }); else Indexes[Index - 1] = ({ UpValues, UpValue[1] }); end; lUpValues[#lUpValues + 1] = Indexes; end; Stack[Instruction[OP_A]] = Wrap(Function, nUpValues, Environment);elseif (Enum < 112) then  Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 116) then if (Enum <= 114) then if (Enum > 113) then local A = Instruction[OP_A]; local Results = { Stack[A](UnPack(Stack, A + 1, Top)); }; local Limit = Instruction[OP_C]; local K = 0; for I = A, Limit do K = K + 1; Stack[I] = Results[K]; end; for I = Limit + 1, StackSize do Stack[I] = nil; end;elseif (Enum < 114) then  local A = Instruction[OP_A]; do return Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])) end;end;elseif (Enum == 115) then for Index = Instruction[OP_A], Instruction[OP_B] do Stack[Index] = (nil); end;elseif (Enum <= 116) then local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](Stack[A + 1]); for I = A, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = UpValues[Instruction[OP_B]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;elseif (Enum <= 118) then if (Enum == 117) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; elseif (Enum <= 118) then Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]] - Stack[Instruction[OP_C]];end;elseif (Enum > 119) then Stack[Instruction[OP_A]] = Create(Instruction[OP_B]);elseif (Enum < 120) then  Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Instruction[OP_B]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](UnPack(Stack, A + 1, Instruction[OP_B])); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Stack[Instruction[OP_C]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]][Instruction[OP_B]] = Instruction[OP_C]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Environment[Instruction[OP_B]]; Instruction = Instruction[OP_E]; Stack[Instruction[OP_A]] = Stack[Instruction[OP_B]][Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; local B = Stack[Instruction[OP_B]]; Stack[A + 1] = B; Stack[A] = B[Instruction[OP_C]]; Instruction = Instruction[OP_E]; local A = Instruction[OP_A]; Stack[A] = Stack[A](Stack[A + 1]); for I = A + 1, StackSize do Stack[I] = nil; end; Instruction = Instruction[OP_E];  Instruction = Instruction[OP_E]; end;  					end; 				end); 			end;  			 do local function _(...) while ((#(not {((-(not (function(_, _, _, _, ...)return (not _), (_)(), ((not _))._; end))))();}))() ^ ((#(not _))._)() and (_)._ + ((-(not _)))() >= (({[((((-_))._)())] = ((-_))._;[(((#_)._)())] = (_)._;[(((-_))._)] = ((-(not _)))._;})._)() / ((-(function(_, _, _, ...)return (#_)(), (_)(), ((-_))(), ((-_))._, (-_); end)))._ or ((_)._)() ^ ((not _))() % ((-_))._ == ((#(not _))._)() < (#_)() < (#_)._) do for _ = ((#((-#_))._ ^ (-#_) * (-#(not _)) * (_)() % (((not _))._)() - #(not _))._)() == ((-#(not (function(_, _, _, _, _, _, _, _, _, ...)return ((#_)._)(), ((-(not _)))._, (-_), ((#_)._)(); end))))._ + (((-#_))._)() * {(-#_);[(((-#(not _)))._)] = (((-#(not _)))._)();(((not _))._)();} % ((-_))._ == (not _) - ((-#(not _)))._ < ((-(not _)))._ < (_)() == (#_)._, (#(not _))() >= (((not _))._)() > (#(not {[((-_))] = (_)();((not _))();}))._ ^ ((#_)._)() + (_)() ^ #(not _) ^ ((_)._)() * (_)() * (((-#_))._)() == (((-_))._)(), ((-(not _)))._ == (-#(not _)) / ((not {((-_))._;(((-_))._)();(_)();_;}))() / (-_) == (-_) - #_ - (-#(not _)) == ((not _))._ <= ((-_))() % ((_)._)() do local function _(...)  end;if (((_)._)() * ((-(not _) <= #_ < (((-(not _)))._)() == (((-_))._)()))() + ((-#_))() > (not _) % (#_)._ < ((-#_))._ and ((-_))() - ((_)._)()) then  end;while ((_)._ or #_ * (_)._ > (((-#_))._)() < (((not _))._)() % (_)._ - #(not _) / ((not _))._) do  end;while ((#_)._ - (-#(not _)) + #_ or (-(not _)) <= ((-#_))._ or #(not _) % ((-#(not _)))._ and ((#(not _))._)()) do  end; end;local _ = ((not _))();if (((-#_))._ / (((-_))._)() ^ ((not _))._ > (_)._ - (((-#(not _)))._)() <= ((not _))() ^ _ - _ == (-#_) ^ (#(not _))._) then local _ = ((-#_))._;if (((-#(not (function(_, _, _, _, _, _, ...)return (((not _))._)(); end))))() + (not (function(_, _, _, _, _, ...)return (#(not _))._, (_)(), ((_)._)(), (#_)._; end)) / (((-#_))._)() or ((not _))._ - ((not _))._ - ((-#(not _)))() >= (#_)._ % ((not _))()) then  end;while (#(not _) / (-#(not _)) == (#_)._ <= ((not _))() + ((#(not _))._)() >= ((-_))() or (-#_) ^ #_) do  end;if ((_)._ + (((-#(not _)))._)() / ((-#(not _)))._ or #_ or ((-_))._ ^ #(not _) / ((#_)._)() >= (-(not _))) then  end;for _ = ((-(not _)))._ + (#(function(_, _, _, _, ...)return ; end))._ - (not _) <= ((-#_))() / #_ < (#_)() + ((#_)._)() + ((-#(not _)))._, (((-((#(not _))._)() <= #_ <= (-#_) / ((not _))()))._)() <= (_)() + (((-_))._)() and #(not _) - ((#_)._)() / (((-_))._)() % (((-#(not _)))._)() < (not _), ({(((-(not _)))._)();[((((-(not _)))._)())] = (-_);})() >= (((-(not (function(_, _, _, ...)return (#_)._, ((-_))._, (_)(), _; end))))._)() and (((-#_))._)() + (_)() + (not _) * ((-#(not _)))() > (-#_) > ((-#(not _)))() do  end;for _ = (((-#{(-#_);(((not _))._)();[((((-(not _)))._)())] = ((-_))._;(#_)._;[(((#(not _))._)())] = (-(not _));}))._)() or (((-{}))._)() < ((#(not _))._)() * ((-#_))() or #(not _) % (#(not _))() > (((-#(not _)))._)() - _, (#_)() / ((-_))._ + ((#_)._)() + #_ + ((not _))() > (((-_))._)() <= ((not _))._ > ((-#_))(), ((-_))() % (((-_))._)() ^ ((-#(not _)))._ + ((-#(not _)))._ + ((_)._)() and ((not _))() * (((-_))._)() <= (not _) do  end; end;local _ = ((-_))._;for _ = (((-#_))._)() % (((not _))._)() < ((-_))._ ^ ((-(not _)))._ + _ == ((-_))._ == (-(not _)) <= (((not _))._)() + ((not _))._ > ((-(not _)))(), ((-#_))() > ((-#((not _))._ % (-#(not _)) > (#_)() or (_)() or ((-#(not _)))._ <= (#(not _))()))() or ((#(not _))._)() == ((-#_))._ ^ ((#_)._)() or (((-#_))._)() > ((not _))() < (#(not _))() - ((#_)._)() and ((-#(not _)))._, (((-#(not _)))._)() == (not ((not _))._ ^ ((not _))() * (((-_))._)() - (((-(not _)))._)() >= #_ > ((-(not _)))._) < (((-#_))._)() ^ (not _) ^ ((not _))._ < (((-_))._)() * (_)._ - ((-#_))() > ((-(not _)))() * (((not _))._)() do for _ = ((#(not _))._)() <= ((-#(not _)))._ - ((-_))() > (((-#(not _)))._)() / ((-#_))._ * (((-#(not _)))._)() * ((-#_))._ >= (((not _))._)(), (-(not _)) * ({[(((-_))._)] = (((-#(not _)))._)();((-#_))._;((-_))();})._ or (((-_))._)() + ((not _))() / (-#_) or ((-_))() >= ((-(not _)))._ + _, (((-_))._)() > (-_) / ((_)._)() * (#(not _))() == ((not _))() <= ((not _))() >= (-_) - ((-#(not _)))() do  end;while ((-(not _)) / ((-#_))._ + (_)() * (-(not _)) and (((-#_))._)() % ((#(not _))._)() * (#(not _))._ ^ (-#_)) do  end;if (((-(not (_)._ and (((-(not _)))._)() > ((_)._)() >= #_)))() < (function(_, _, _, ...)return ((-#_))(), (-#_); end) / ((#(not _))._)() == #_ + ((#(not _))._)() < ((not _))() <= (#_)() * (-_)) then  end;local _ = #_;local function _(...)  end;while (((-#_))() / (((-#(not {_;(-#(not _));[(((#(not _))._)())] = (((not _))._)();})))._)() > (_)() - ((-#(not _)))._ * #(not _) > ((#_)._)() + (not _) / (((not _))._)()) do  end; end;local _ = (-#(#(not _))() > ((-(not {[((#(not _))())] = (-#(not _));[(((-#(not _)))._)] = #(not _);(-#_);(((-(not _)))._)();})))._ >= (#_)._ * ((-#_))() == ((-#(not _)))._ > ((not _))() % ((-#(not _)))._ or ((-_))._);if (#(not (_)._ or (#(not _))() ^ (((not _))._)() > (_)() ^ (((-#(not _)))._)() / (-(not _))) <= ((-#{(#(not _))();}))() ^ (((-#(((-#_))._)() or ((-#_))._ + (#_)._ - _))._)() % ((-#(not _)))._ / (not _) - (-#_) == (#(not _))._ - ((#(not _))._)() >= ((_)._)() * (-#(not _))) then while ((_)() * (#(not _))() + (-#(not _)) / _ - ((#_)._)() >= ((not _))() <= ((#(not _))._)() or ((#_)._)()) do  end;while ((((-(function(...)return (((-(not _)))._)(), (#(not _))._; end)))._)() - (not _) / (((-_))._)() or (((-#_))._)() / ((_)._)() <= (_)() < ((-#(not _)))._ == ((-#(not _)))._) do  end;while ((((-(not (function(_, _, _, _, _, _, _, ...)return ((#_)._)(), (_)._, (((-#_))._)(), ((-(not _)))(), (not _); end))))._)() ^ (#_)._ and (((-#_))._)() + (((not _))._)() * #(not _) == (-#(not _)) <= ((-#(not _)))._ * (((-#(not _)))._)()) do  end;if ((#(not _))() <= ((not _))._ and ((not _))._ + ((#(not _))._)() ^ (-#_) <= ((-#(not _)))._ > ((not _))() >= ((-#(not _)))._) then  end;local function _(...)  end; end;for _ = (#(not _))() ^ ((not _))() and ((-_))._ - (-(not _)) >= (_)() and ((-(not _)))() < (-(not _)) - (-#(not _)) % (#_)() == ((-(not _)))._, (((-(not _)))._)() < (#_)() / (#(not _))._ and ((#(not _))._)() + (((-#_))._)() + ((not _))() and ((-#_))() >= (_)() > #_ == ((-#_))._, #_ >= (_)() == (-_) % ((_)._)() / ((_)._)() > ((-#(not _)))() / ((-_))._ < _ ^ ((not _))() == ((-#_))._ do for _ = (_)._ + (-#_) > (((-#(not _)))._)() - ((#_)._)() - (#(not _))._ < ((_)._)() and ((-(not _)))() >= ((-_))(), ((-(not _)))._ / #_ / ((#(not _))._)() - ((-#(not _)))._ < ((-(not _)))() - ((-_))() % (-#(not _)) / (((-#_))._)(), (#(not (function(_, _, _, _, _, _, _, _, ...)return (not _), (((not _))._)(), (#_)._, ((-_))(), ((-(not _)))(), (-#(not _)), (_)(); end)))._ > (({((-#(not _)))._;(-(not _));((-#_))();[((-(not _)))] = #(not _);})._)() < ((-#(not _)))() ^ ((-_))._ % (#(not _))() + #(not _) % (#(not _))() > (((-#_))._)() do  end;while ((((-_))._)() <= ((#_)._)() == ((-#_))._ - ((-(not _)))() % (((-#(not _)))._)() > (-#(not _)) and ((-_))() * ((-(not _)))()) do  end;local function _(...)  end;local function _(...)  end;if ((((-#(not _)))._)() % (((-(function(_, _, _, ...)return ((-#(not _)))(), ((-#(not _)))._, ((-(not _)))._; end)))._)() ^ ((-#(not _)))._ == (-#(not _)) >= ((-_))() > (#_)._ / ((not _))._ ^ (-(not _))) then  end;for _ = ((not _))._ / ((#(not _))._)() > ((-#_))._ - ((_)._)() or ((-#(not _)))() % (#_)() < (((-(not _)))._)() > (-#_), (#(not _))._ * ((_)._)() > (-(not _)) + ((-#_))._ or (#_)._ - (((-(not _)))._)() > (-_) > (((-_))._)(), (_)() - (-(not _)) + ((#(not _))._)() / (((-_))._)() or ((-#_))() >= #(not _) <= (_)._ == ((#_)._)() do  end; end; end;  end; end;   			return Wrap(Deserialize(), {}, GetFEnv())(...);  end)(({[((#{} + 0x25039BA))]=(((#{886;} + 34769)));[(0x4222AED)]=((0x161A1A33));[(0x8DF60DF)]=(((#{} + 0x018)));["n3VrVFJ"]=(((#{0x01D;743;0x23A;197;} + 0x39BB3845)));[(202989236)]=(((#{122;} + 0x000)));[(951106213)]=(((#{0x3D7;(function(...)return 0x1AD;end)()} + 0x0FE)));Sn5RLx=("\97");[((#{446;938;} + 482077540))]=(((74 - #("this isn't krnl support you bonehead moron"))));[((412662398 - #("who the fuck looked at synapse xen and said 'yeah this is good enough for release'")))]=(((40 - #("still waiting for luci to fix the API :|"))));["Id2Nwd"]=((49));[((#{(function(...)return 0x262,197,0x0C4,0x236;end)()} + 497333773))]=(((92 - #("guys someone play Among Us with memcorrupt he is so lonely :("))));['b1Cu2c6ok']=("\102");[(79392059)]=((0x9B87866));[(0x17512685)]=(((#{(function(...)return 340,...;end)()} + 0x003)));[(405210791)]=("\109");[((#{} + 0xC1D1570))]=((0x033));[((#{0x317;0x165;606;(function(...)return 809,698,551,...;end)(520,0x3A7,0x131)} + 915959833))]=(((#{90;673;(function(...)return ;end)()} + 86367)));["mGSFdpqgtu"]=(((#{} + 488855525)));prwpvl=("\105");[((#{627;0x1C5;118;31;(function(...)return 350,...;end)(941)} + 0x1390236E))]=(((#{0x0D1;0x15C;0x273;(function(...)return 0x297,...;end)(0x246,402,0x1B5)} + 16777209)));[((240506538 - #("guys someone play Among Us with memcorrupt he is so lonely :(")))]=((0x007));[(0x34B70785)]=("\107");[((598622466 - #("@everyone designs are done. luraph website coming.... eta JULY 2020")))]=("\115");["w9NI1a7um"]=(((57 - #("why does psu.dev attract so many ddosing retards wtf"))));wj0AD=((0x0A5));[((627840907 - #("you dumped constants by printing the deserializer??? ladies and gentlemen stand clear we have a genius in the building.")))]=((405210791));[((307165542 - #("uh oh everyone watch out pain exist coming in with the backspace method one dot two dot man dot")))]=((8));[(0x363CA26F)]=((0x0DB));[(991670267)]=(((100252416 - #("guys someone play Among Us with memcorrupt he is so lonely :("))));[(0x3474E46A)]=(((#{0x116;0x339;(function(...)return ;end)()} + 1021)));[((849071370 - #("IIiIIiillIiiIIIiiii :troll:")))]=(((#{0x183;0x00E;0x20F;} + 519483948)));[((200401059 - #("Are you using AztupBrew, clvbrew, or IB2? Congratulations! You're deobfuscated!")))]=(((#{0x0C2;} + 615862991)));[(163084390)]=("\50");[(185901947)]=(((#{791;0x0F5;0x01C;26;} + 4996)));[(615862992)]=("\100");["IxSRCsgRHx"]=(((#{} + 2047)));[((#{(function(...)return 0x319,243,0x308,925;end)()} + 191718324))]=(((164692151 - #("woooow u hooked an opcode, congratulations~ now suck my cock"))));[(370809395)]=("\35");keRo00bB4l=((207989630));[((979547127 - #("uh oh everyone watch out pain exist coming in with the backspace method one dot two dot man dot")))]=((598622399));[((371859218 - #("who the fuck looked at synapse xen and said 'yeah this is good enough for release'")))]=(((#{} + 0x34ABFD60)));[((#{0x0E0;0x096;(function(...)return 0x199;end)()} + 488855522))]=("\104");[((36913351 - #("oh Mr. Pools, thats a little close please dont touch me there... please Mr. Pools I am only eight years old please stop...")))]=((52));[((#{0x224;(function(...)return ...;end)(32)} + 0x34ABFD5E))]=("\101");[((854005478 - #("luraph is now down until further notice for an emergency major security update")))]=(((113 - #("Luraph v12.6 has been released!: changed absolutely fucking nothing but donate to my patreon!"))));[((558156774 - #("i am not wally stop asking me for wally hub support please fuck off")))]=(((955437760 - #("Luraph: Probably considered the worst out of the three, Luraph is another Lua Obfuscator. It isnt remotely as secure as Ironbrew or Synapse Xen, and it isn't as fast as Ironbrew either."))));[((207989735 - #("PSU|161027525v21222B11273172751L275102731327523d27f22I27f21o26o24Y21J1827F1X27f1r27F23823a26w1... oh wait")))]=("\99");[(0x1AC3526D)]=(((#{169;(function(...)return 352,...;end)(573,190,775,999)} + 0xFFFA)));[(64648142)]=(((677389703 - #("LuraphDeobfuscator.zip (oh god DMCA incoming everyone hide)"))));[((#{881;467;990;} + 100252352))]=("\110");[(0x1C26BA0A)]=((0x05A));[(0x2C5076E4)]=((0x05C));[((390337001 - #("Are you using AztupBrew, clvbrew, or IB2? Congratulations! You're deobfuscated!")))]=(((#{0x1BB;0x0C3;363;530;} - 0x001)));[(247064677)]=(((#{713;0x2FB;836;0x11F;} + 244)));[(0x9D1007B)]=("\112");[((968571020 - #("i am not wally stop asking me for wally hub support please fuck off")))]=("\51");[(0x11D4E007)]=(((#{} + 0x1B609DEB)));zJVwLS7Z=((21));[((955437653 - #("luraph is now down until further notice for an emergency major security update")))]=("\114");['zTxsrYXjUO']=(((#{} + 0x006)));["RkdQf0cxl"]=((880354));[((459316820 - #("PSU|161027525v21222B11273172751L275102731327523d27f22I27f21o26o24Y21J1827F1X27f1r27F23823a26w1... oh wait")))]=("\121");Dr4muqgBH=("\117");['JxQ4fGuz6I']=("\111");[(0x2696B452)]=(((#{0x3B9;} + 0x34B70784)));[(0x1EF6B22F)]=("\116");[((677389763 - #("you dumped constants by printing the deserializer??? ladies and gentlemen stand clear we have a genius in the building.")))]=("\120");HcZ0mUlG3=("\108");[((#{0x287;0x23E;(function(...)return 0x26A,0x342,0x022,0x1B6,...;end)(275,795)} + 219190798))]=(((#{0x20F;936;(function(...)return 494,447;end)()} + 0xC9389)));['igtWjMj']=(((29 - #("IIiIIiillIiiIIIiiii :troll:"))));MXPb42=("\98");['cv2d3Xi3cr']=("\103");["hCg5c"]=((0x028));[(0x4BC7D04)]=((36));}), ...);
